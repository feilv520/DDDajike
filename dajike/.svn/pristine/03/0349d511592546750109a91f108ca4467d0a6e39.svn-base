//
//  DCollectListViewController.m
//  dajike
//
//  Created by songjw on 15/7/16.
//  Copyright (c) 2015年 haixia. All rights reserved.
//

#import "DCollectListViewController.h"
#import "dDefine.h"
#import "DMyAfHTTPClient.h"
#import "DBaseNavView.h"
#import "DTools.h"

#import "DCollectGoodCell.h"
#import "DCollectShopCell.h"

#import "DCollectGoodModel.h"
#import "BunessList1Model.h"

@interface DCollectListViewController (){
    
    NSMutableArray *goodDataArray;
    NSMutableArray *_goodDeleteArr;
    NSMutableArray *shopDataArray;
    NSMutableArray *_shopDeleteArr;
    
    DImgButton *_leftBut;
    DImgButton *_rightBut;
    
    NSInteger _goodPage;
    NSInteger _shopPage;
}

@end

@implementation DCollectListViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    if (self.collectType == GOODS) {
        [self setNaviBarTitle:@"收藏的商品"];
        goodDataArray = [[NSMutableArray alloc]init];
        _goodDeleteArr = [[NSMutableArray alloc]init];
        
    }else if (self.collectType == SHOPS){
        [self setNaviBarTitle:@"收藏的店铺"];
        shopDataArray = [[NSMutableArray alloc]init];
        _shopDeleteArr = [[NSMutableArray alloc]init];
    }
//    mine_selected_01完成
    _leftBut = [DBaseNavView createNavBtnWithImgNormal:@"img_pub_02" imgHighlight:@"" imgSelected:@"mine_selected_02" target:self action:@selector(leftButAciton)];
    
    _rightBut = [DBaseNavView createNavBtnWithImgNormal:@"mine_collect_edit" imgHighlight:@"" imgSelected:@"mine_selected_01" target:self action:@selector(rightButAction)];
    [self setNaviBarLeftBtn:_leftBut];
    [self setNaviBarRightBtn:_rightBut];
    
    [self addTableView:YES];
    CGRect frame = self.dMainTableView.frame;
    frame.size.height += 49;
    self.dMainTableView.frame = frame;
    self.dMainTableView.delegate = self;
    self.dMainTableView.dataSource = self;
    self.dMainTableView.allowsSelectionDuringEditing = YES;
    
    
    [self refreshData:^(BOOL finish) {
    }];
    
    
}
- (void)leftButAciton{
    [_leftBut setImage:_leftBut.currentImage forState:UIControlStateHighlighted];
    if (_rightBut.selected) {
        if (self.collectType == GOODS) {
            for (int i = 0; i < goodDataArray.count; i++) {
                DCollectGoodModel *model = goodDataArray[i];
                model.isChecked = YES;
                [goodDataArray replaceObjectAtIndex:i withObject:model];
            }
            _goodDeleteArr = [NSMutableArray arrayWithArray:goodDataArray];
        }else if(self.collectType == SHOPS){
            for (int i = 0; i < shopDataArray.count; i++) {
                BunessList1Model *model = shopDataArray[i];
                model.isChecked = YES;
                [shopDataArray replaceObjectAtIndex:i withObject:model];
            }
            _shopDeleteArr = [NSMutableArray arrayWithArray:shopDataArray];
        }
        [self.dMainTableView reloadData];
    }else{
        [self.navigationController popViewControllerAnimated:YES];
    }
}
- (void)rightButAction{
    [_rightBut setImage:_leftBut.currentImage forState:UIControlStateHighlighted];
    if (_rightBut.selected) {
        if (_goodDeleteArr.count != 0||
            _shopDeleteArr.count != 0) {
            UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"提示" message:@"您确定要删除所选项？" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
            [alert show];
        }else{
            [_leftBut setImageEdgeInsets:UIEdgeInsetsMake(10, 15, 10 ,25 )];
            [_rightBut setImageEdgeInsets:UIEdgeInsetsMake(10, 15, 10, 25)];
            _leftBut.selected = !_leftBut.selected;
            _rightBut.selected = !_rightBut.selected;
            [self.dMainTableView setEditing:NO animated:YES];
        }
    }else{
        [_leftBut setImageEdgeInsets:UIEdgeInsetsMake(5, 15, 5, 15)];
        [_rightBut setImageEdgeInsets:UIEdgeInsetsMake(5, 15, 5, 15)];
        
        [self.dMainTableView setEditing:YES animated:YES];
        _leftBut.selected = !_leftBut.selected;
        _rightBut.selected = !_rightBut.selected;
    }
    
    
    
}

- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    if (buttonIndex == 0) {
        if(self.collectType == GOODS){
            for (int i = 0; i < goodDataArray.count; i++) {
                DCollectGoodModel *listmodel = goodDataArray[i];
                listmodel.isChecked = NO;
                [goodDataArray replaceObjectAtIndex:i withObject:listmodel];
            }
            _goodDeleteArr =[[NSMutableArray alloc]init];
        }else if (self.collectType == SHOPS){
            for (int i = 0; i < shopDataArray.count; i++) {
                BunessList1Model *listmodel = shopDataArray[i];
                listmodel.isChecked = NO;
                [shopDataArray replaceObjectAtIndex:i withObject:listmodel];
            }
            _shopDeleteArr = [[NSMutableArray alloc]init];
        }
        _leftBut.selected = !_leftBut.selected;
        _rightBut.selected = !_rightBut.selected;
        [_leftBut setImageEdgeInsets:UIEdgeInsetsMake(10, 15, 10 ,25 )];
        [_rightBut setImageEdgeInsets:UIEdgeInsetsMake(10, 15, 10, 25)];
        
        [self.dMainTableView setEditing:NO animated:YES];
//        [self.dMainTableView performSelector:@selector(reloadData) withObject:nil afterDelay:0.3];
        
    }else if (buttonIndex == 1){
        if (_rightBut.selected) {
            NSMutableString *itemId = [[NSMutableString alloc]init];
            NSString *type = [[NSString alloc]init];
            
            if (self.collectType == GOODS) {
                type = @"goods";
                for (int i = 0; i < _goodDeleteArr.count; i++) {
//                    NSIndexPath *index = _goodDeleteArr[i];
//                    DCollectGoodModel *model = goodDataArray[index.row];
                    DCollectGoodModel *model = _goodDeleteArr[i];
                    if (i == 0){
                        itemId = [NSMutableString stringWithString:model.item_id];
                    }else{
                        [itemId appendFormat:@",%@",model.item_id];
                    }
                }
                
            }else if (self.collectType == SHOPS){
                type = @"store";
                for (int i = 0; i < _shopDeleteArr.count; i++) {
//                    NSIndexPath *index = _shopDeleteArr[i];
//                    BunessList1Model *model = shopDataArray[index.row];
                    BunessList1Model *model = _shopDeleteArr[i];
                    if (i == 0){
                        itemId = [NSMutableString stringWithString:model.item_id];
                    }else{
                        [itemId appendFormat:@",%@",model.item_id];
                    }
                }
            }
            NSDictionary *dict = [NSDictionary dictionaryWithObjectsAndKeys:[FileOperation getUserId],@"userId",itemId,@"itemId",type,@"type",nil];
            [[DMyAfHTTPClient sharedClient]postPathWithMethod:@"MyCollectss.delete" parameters:dict ifAddActivityIndicator:NO success:^(AFHTTPRequestOperation *operation, PostData *responseObject) {
                if (responseObject.succeed) {
                    NSLog(@"%@",responseObject.result);
                    //数据处理
                    if (self.collectType == GOODS) {
                        for (int i = 0; i <_goodDeleteArr.count; i++) {
//                            NSIndexPath *index = _goodDeleteArr[i];
//                            [goodDataArray removeObjectAtIndex:index.row];
                            [goodDataArray removeObject:_goodDeleteArr[i]];
                        }
                    }else if (self.collectType == SHOPS){
                        for (int i = 0; i <_shopDeleteArr.count; i++) {
//                            NSIndexPath *index = _shopDeleteArr[i];
//                            [shopDataArray removeObjectAtIndex:index.row];
                            [shopDataArray removeObject:_shopDeleteArr];
                        }
                    }
                    [self.dMainTableView reloadData];
                }
                _leftBut.selected = !_leftBut.selected;
                _rightBut.selected = !_rightBut.selected;
                [_leftBut setImageEdgeInsets:UIEdgeInsetsMake(10, 15, 10 ,25 )];
                [_rightBut setImageEdgeInsets:UIEdgeInsetsMake(10, 15, 10, 25)];
                _goodDeleteArr = [[NSMutableArray alloc]init];
                _shopDeleteArr = [[NSMutableArray alloc]init];
                [self.dMainTableView setEditing:NO animated:YES];
            } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
                NSLog(@"error = %@",error);
            }];
            
        }
        
    }
    
}

- (void)addData:(void (^)(BOOL finish))success{
    if (self.collectType == GOODS) {
        NSDictionary *dict = [NSDictionary dictionaryWithObjectsAndKeys:get_userId,@"userId",[NSString stringWithFormat:@"%d",_goodPage],@"page",@"10",@"pageSize", nil];
        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
            
            [[DMyAfHTTPClient sharedClient] postPathWithMethod:@"MyCollectss.couponList" parameters:dict ifAddActivityIndicator:NO success:^(AFHTTPRequestOperation *operation, PostData *responseObject) {
                NSLog(@"%@",responseObject.result);
                if (responseObject.succeed) {
                    NSArray *arr = [NSArray arrayWithArray:[responseObject.result objectForKey:@"data"]];
                    for (NSDictionary *dic in arr) {
                        DCollectGoodModel *model = [[DCollectGoodModel alloc]init];
                        model = [JsonStringTransfer dictionary:dic ToModel:model];
                        model.isChecked = NO;
                        [goodDataArray addObject:model];
                    }
                }
                success(YES);
                _goodPage = [[responseObject.result objectForKey:@"page"] integerValue];
                if (_goodPage >= [[responseObject.result objectForKey:@"totalPage"] integerValue]) {
                    isEnd = YES;
                }
                [self.dMainTableView reloadData];
                
            } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
                NSLog(@"%@",error);
            }];
        });
    }else if (self.collectType == SHOPS){
        NSDictionary *dict = [NSDictionary dictionaryWithObjectsAndKeys:get_userId,@"userId",[NSString stringWithFormat:@"%d",_shopPage],@"page",@"10",@"pageSize",[FileOperation getLatitude],@"latitude",[FileOperation getLongitude],@"longitude",nil];
        
        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
            
            [[DMyAfHTTPClient sharedClient]postPathWithMethod:@"MyCollectss.storeList" parameters:dict ifAddActivityIndicator:NO success:^(AFHTTPRequestOperation *operation, PostData *responseObject) {
                NSLog(@"opertion*&****************:%@",operation);
                NSLog(@"result:%@",responseObject.result);
                if (responseObject.succeed == YES) {
                    NSArray *subArray= [NSArray arrayWithArray:[responseObject.result objectForKey:@"data"]];
                    
                    for (NSDictionary *dic in subArray) {
                        BunessList1Model *model = [[BunessList1Model alloc]init];
                        model = [JsonStringTransfer dictionary:dic ToModel:model];
                        model.isChecked = NO;
                        [shopDataArray addObject:model];
                    }
                }
                success (YES);
                _shopPage = [[responseObject.result objectForKey:@"page"] integerValue];
                if (_shopPage >= [[responseObject.result objectForKey:@"totalPage"] integerValue]) {
                    isEnd = YES;
                }
                [self.dMainTableView reloadData];
            } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
                NSLog(@"%@",error);
            }];
        });
    }

}

#pragma mark------
#pragma mark------uitableViewDelegate uitableViewDatasource--------
- (CGFloat) tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 0.5;
}
- (CGFloat) tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0.5;
}
- (NSInteger) tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (self.collectType == GOODS) {
        if (goodDataArray.count == 0) {
            [self.noDataView setHidden:NO];
        }else{
            [self.noDataView setHidden:YES];
        }
        return goodDataArray.count;
    }else if (self.collectType == SHOPS){
        if (shopDataArray.count == 0) {
            [self.noDataView setHidden:NO];
        }else{
            [self.noDataView setHidden:YES];
        }
        return shopDataArray.count;
    }
    return 0;
    
}
- (CGFloat) tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    //    UITableViewCell *cell = [self tableView:tableView cellForRowAtIndexPath:indexPath];
    //    return cell.frame.size.height;
    if (self.collectType == GOODS) {
        return 116;
    }else if (self.collectType == SHOPS){
        return 92;
    }
    return 0.5;
}
- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath{
    return UITableViewCellEditingStyleNone;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (self.collectType == GOODS){
        DCollectGoodCell *goodCell = [DTools loadTableViewCell:self.dMainTableView cellClass:[DCollectGoodCell class]];
        if (indexPath.row < goodDataArray.count) {
            DCollectGoodModel *model = goodDataArray[indexPath.row];
            goodCell.goodModel = model;
            [goodCell setChecked:model.isChecked];
        }
        return goodCell;
    }else if (self.collectType == SHOPS){
        DCollectShopCell *shopCell = [DTools loadTableViewCell:self.dMainTableView cellClass:[DCollectShopCell class]];
        if (indexPath.row < shopDataArray.count) {
            BunessList1Model *model = shopDataArray[indexPath.row];
            shopCell.shopModel = model;
            [shopCell setChecked:model.isChecked];
        }
        return shopCell;
    }
    return nil;
}
- (void) tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    //取消点击选中状态
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    if (_rightBut.selected) {
        if (self.collectType == GOODS) {
            DCollectGoodCell *cell = (DCollectGoodCell *)[tableView cellForRowAtIndexPath:indexPath];
            DCollectGoodModel *listModel = goodDataArray[indexPath.row];
            listModel.isChecked = !listModel.isChecked;
            [goodDataArray replaceObjectAtIndex:indexPath.row withObject:listModel];
            [cell setChecked:listModel.isChecked];
            
//            if ([_goodDeleteArr containsObject:indexPath]) {
//                [_goodDeleteArr removeObject:indexPath];
//            }else{
//                [_goodDeleteArr addObject:indexPath];
//            }
            
            if ([_goodDeleteArr containsObject:listModel]) {
                [_goodDeleteArr removeObject:listModel];
            }else{
                [_goodDeleteArr addObject:listModel];
            }

        }else if(self.collectType == SHOPS){
            DCollectShopCell *cell = (DCollectShopCell *)[tableView cellForRowAtIndexPath:indexPath];
            BunessList1Model *listModel = shopDataArray[indexPath.row];
            listModel.isChecked = !listModel.isChecked;
            [shopDataArray replaceObjectAtIndex:indexPath.row withObject:listModel];
            [cell setChecked:listModel.isChecked];
            
//            if ([_shopDeleteArr containsObject:indexPath]) {
//                [_shopDeleteArr removeObject:indexPath];
//            }else{
//                [_shopDeleteArr addObject:indexPath];
//            }
            if ([_shopDeleteArr containsObject:listModel]) {
                [_shopDeleteArr removeObject:listModel];
            }else{
                [_shopDeleteArr addObject:listModel];
            }
        }
        
    }else{
        if (self.collectType == GOODS) {
            
        }else if (self.collectType == SHOPS){
            
        }
        
    }
    
}

#pragma mark-----
#pragma mark---------MJRefresh---------
//加载数据
- (void) loadData:(void (^)(BOOL finish))success
{
    if (isEnd) {
        [ProgressHUD showMessage:@"加载完成" Width:280 High:10];
        success (YES);
    }else{
        if (self.collectType == GOODS) {
            _goodPage += 1;
        }else if (self.collectType == SHOPS){
            _shopPage += 1;
        }
        [self addData:^(BOOL finish) {
            success(finish);
        }];
    }
    
}

//刷新数据
- (void) refreshData:(void (^)(BOOL finish))success
{
    if (self.collectType == GOODS) {
        if (goodDataArray != nil) {
            [goodDataArray removeAllObjects];
            goodDataArray = nil;
            goodDataArray = [[NSMutableArray alloc]init];
        }
        _goodPage = 0;
    }else if (self.collectType == SHOPS){
        if (shopDataArray != nil) {
            [shopDataArray removeAllObjects];
            shopDataArray = nil;
            shopDataArray = [[NSMutableArray alloc]init];
        }
        _shopPage = 0;
    }
    
    isEnd = NO;
    [self.footer resetNoMoreData];
    [self loadData:^(BOOL finish) {
        success(finish);
    }];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
